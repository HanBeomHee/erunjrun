<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.erunjrun.board.dao.RunBoardDAO">
	
	<select id="list" resultType="com.erunjrun.board.dto.RunBoardDTO">
        SELECT 
            b.board_idx,
            m.nickname,
            b.subject,
            b.bHit,
            b.likes,
            b.create_date
        FROM 
            board b 
        JOIN 
            member m ON b.id = m.id
        WHERE 
            b.code_name = 'B100'
            AND b.use_yn = 'Y'
            AND b.is_map = 'Y'
        ORDER BY
            b.board_idx DESC
        LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<!-- CEIL(COUNT(board_idx)/#{param1}) AS pages -->
	<select id="count" resultType="int">
		SELECT COUNT(*) FROM board b WHERE b.use_yn = 'Y' AND b.is_map = 'Y' AND b.code_name = 'B100'
    </select>
    
    <select id="bHitList" resultType="com.erunjrun.board.dto.RunBoardDTO">
		SELECT 
            b.board_idx,
            m.nickname,
            b.subject,
            b.bHit,
            b.likes,
            b.create_date
        FROM 
            board b 
        JOIN 
            member m ON b.id = m.id
		WHERE MONTH(create_date) = MONTH(NOW())
			AND b.code_name = 'B100'
            AND b.use_yn = 'Y'
            AND b.is_map = 'Y' 
			ORDER BY likes DESC
			LIMIT 3;
    </select>
    
    <select id="search" resultType="com.erunjrun.board.dto.RunBoardDTO">
	    SELECT 
	        b.board_idx,
	        m.nickname,
	        b.subject,
	        b.content,
	        b.bHit,
	        b.likes,
	        b.create_date
	    FROM 
	        board b
	    JOIN 
	        member m ON b.id = m.id
	    WHERE 
	        b.use_yn = 'Y'
	        AND b.is_map = 'Y'
	        AND b.code_name = 'B100'
	        <if test="keyword != null and keyword != ''">
	            <choose>
	                <when test="opt == 'subject'">
	                    AND b.subject LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="opt == 'nickname'">
	                    AND m.nickname LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="opt == 'content'">
	                    AND b.content LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	            </choose>
	        </if>
	    ORDER BY 
	        b.board_idx DESC
	    LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="getSearchTotalPages" resultType="int">
	    SELECT  COUNT(*)
	    FROM 
	        board b
	    JOIN 
	        member m ON b.id = m.id
	    WHERE 
	        b.use_yn = 'Y'
	        AND b.is_map = 'Y'
	        AND b.code_name = 'B100'
	        <if test="keyword != null and keyword != ''">
	            <choose>
	                <when test="opt == 'subject'">
	                    AND b.subject LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="opt == 'nickname'">
	                    AND m.nickname LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="opt == 'content'">
	                    AND b.content LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	            </choose>
	        </if>
	</select>
	
	<!-- 게시글 삽입 쿼리 -->
    <insert id="insertRunBoard" 
    			useGeneratedKeys="true"
				keyColumn="board_idx"
				keyProperty="board_idx"
    			parameterType="com.erunjrun.board.dto.RunBoardDTO">
        INSERT INTO board (id, code_name, subject, content, use_yn, is_map)
        	VALUES (#{id}, #{code_name}, #{subject}, #{content}, 'Y', 'Y')
    </insert>
    
    <!-- 경로 데이터 삽입 쿼리 -->
    <insert id="insertRouteData" parameterType="com.erunjrun.board.dto.RunBoardDTO">
        INSERT INTO board_map (board_idx, latitude, longitude, path, order_num)
        	VALUES (#{board_idx}, #{latitude}, #{longitude}, #{path}, #{order_num})
    </insert>
    
        <!-- 파일 정보 저장 쿼리 -->
    <insert id="fileWrite" parameterType="com.erunjrun.image.dto.ImageDTO">
        INSERT INTO image (code_name, img_ori, img_new, img_no)
        	VALUES (#{code_name}, #{img_ori}, #{img_new}, #{img_no})
    </insert>
    
    
</mapper>