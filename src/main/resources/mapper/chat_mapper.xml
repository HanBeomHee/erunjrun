<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.erunjrun.chat.dao.ChatPersonalDAO">
	<select id="getContent" resultType="com.erunjrun.chat.dto.ChatPersonalDTO">
		SELECT content_idx, c.content , start_date, sender, recipient, image, icon_image, nickname
			FROM chat_content c 
			JOIN member m ON c.sender = m.id 
			LEFT JOIN profile p ON c.sender = p.id 
			WHERE chat_idx = #{chatIdx} AND c.use_yn = 'Y'
	</select>
	
	<select id="getUserName" resultType="com.erunjrun.chat.dto.ChatPersonalDTO">
		SELECT c.id, nickname FROM chat_link c join member m on c.id = m.id WHERE chat_idx = #{chatIdx}
	</select>
	
	<select id="getRoomNum" resultType="String">
		SELECT c1.chat_idx 
			FROM chat_link c1 JOIN chat_link c2 
			ON c1.chat_idx = c2.chat_idx 
			WHERE c1.id = #{unlikeId} AND c2.id = #{id}
	</select>
	
	<insert id="createRoom" 
		useGeneratedKeys="true"
		keyColumn="chat_idx"
		keyProperty="chat_idx"
		parameterType="com.erunjrun.chat.dto.ChatPersonalDTO">
		INSERT INTO chat (create_date) VALUES (#{create_date})
		<!-- insert into chat_link (chat_idx,id) values (generatedkey, #{}); -->
	</insert>
	
	<insert id="linkRoom">
		INSERT INTO chat_link (chat_idx,id) 
			VALUES (#{chat_idx},#{id}), (#{chat_idx},#{unlikeId})
	</insert>
	
	<insert id="sendMessage" parameterType="map">
		INSERT INTO  chat_content (chat_idx,content,sender,recipient) 
			VALUES (#{chatIdx},#{message},#{baseUser},#{otherUser})
	</insert>
	
	<update id="exitRoom">
		UPDATE chat_link SET use_yn = 'Y' WHERE chat_idx= #{chatIdx} AND id=#{user}
	</update>
	
	<delete id="deleteChatData">
		DELETE FROM chat_content WHERE DATE(end_date) = CURDATE()
	</delete>
	
	
	
	<select id="getCrewLeaderChat" resultType="String">
		SELECT chat_idx FROM crew_chat_link 
			WHERE chat_idx IN 
				(SELECT chat_idx FROM crew_chat 
				WHERE crew_idx = #{crewIdx} AND code_cp = 'P') 
			AND id = #{baseUser}
	</select>
	
	<insert id="createCrewLeaderRoom" 
		useGeneratedKeys="true"
		keyColumn="chat_idx"
		keyProperty="chat_idx"
		parameterType="com.erunjrun.chat.dto.ChatCrewLeaderDTO">
		INSERT INTO crew_chat (crew_idx, code_cp) VALUES (#{crew_idx},'P') 
	</insert>
	
	<select id="getLeaderId" resultType="String">
		SELECT id FROM crew_member WHERE crew_idx = #{crewIdx} AND is_leader = 'Y'
	</select>
	
	<insert id="createCrewLinkTable">
		INSERT INTO crew_chat_link (chat_idx, id, is_leader) 
			VALUES (#{chatIdx},#{baseUser},'N'), (#{chatIdx},#{readerId},'Y') 
	</insert>
	
	<select id="getCrewLeaderUserName" resultType="com.erunjrun.chat.dto.ChatCrewLeaderDTO">
		SELECT c.id, nickname, is_leader FROM crew_chat_link c JOIN member m ON c.id = m.id WHERE chat_idx = #{chatIdx}
	</select>
	
	<select id="getCrewLeaderContent" resultType="com.erunjrun.chat.dto.ChatCrewLeaderDTO">
		SELECT create_date, sender, nickname, icon_image, image, c.content 
			FROM crew_chat_content c 
			JOIN member m ON c.sender = m.id 
			LEFT JOIN profile p ON c.sender = p.id WHERE chat_idx = #{chatIdx}
	</select>
	
	<insert id="sendCrewLeaderMessage" parameterType="map">
		INSERT INTO crew_chat_content (chat_idx,sender,content) 
			VALUES (#{chatIdx},#{baseUser},#{message})
	</insert>
	
	<update id="exitCrewLeaderRoom">
		UPDATE crew_chat_link SET use_yn = 'Y' WHERE chat_idx= #{chatIdx} AND id=#{user}
	</update>	
	
	<select id="crewLeaderChatList" resultType="com.erunjrun.chat.dto.ChatCrewLeaderDTO">
		SELECT 
			gg.id,
			gg.chat_idx,
			(SELECT create_date FROM crew_chat_content WHERE chat_idx = gg.chat_idx ORDER BY content_idx DESC LIMIT 1) AS create_date,
			nickname,
			gender,
			birth,
			icon_image,
			image
		FROM (
				SELECT cc.id, cc.chat_idx 
				FROM crew_chat_link AS cc
				WHERE chat_idx IN (
					SELECT chat_idx
					FROM crew_chat_link AS c 
					WHERE chat_idx IN (
						SELECT chat_idx
						FROM crew_chat
						WHERE crew_idx = #{crew_idx}
						AND code_cp ='P'
					)
					AND is_leader = 'Y'
					AND c.use_yn = 'N'
				)
				AND is_leader = 'N'
		) AS gg
		JOIN member AS m ON gg.id = m.id
		LEFT JOIN profile p ON gg.id = p.id
		ORDER BY create_date DESC

	</select>
	
	
	<select id="crewLeaderChatListFull" resultType="com.erunjrun.chat.dto.ChatCrewLeaderDTO" parameterType="map">
		
		WITH chat_data AS (	
			SELECT 
				gg.id,
				gg.chat_idx,
				(SELECT create_date FROM crew_chat_content WHERE chat_idx = gg.chat_idx ORDER BY content_idx DESC LIMIT 1) AS create_date,
				nickname,
				gender,
				birth,
				icon_image,
				image,
				COUNT(*) OVER() AS total_count
			FROM (
					SELECT cc.id, cc.chat_idx 
					FROM crew_chat_link AS cc
					WHERE chat_idx IN (
						SELECT chat_idx
						FROM crew_chat_link AS c 
						WHERE chat_idx IN (
							SELECT chat_idx
							FROM crew_chat
							WHERE crew_idx = #{crew_idx}
							AND code_cp ='P'
						)
						AND is_leader = 'Y'
						AND c.use_yn = 'N'
					)
					AND is_leader = 'N'
			) AS gg
			JOIN member AS m ON gg.id = m.id
			LEFT JOIN profile p ON gg.id = p.id
		)
		SELECT *
		FROM chat_data
		WHERE create_date IS NOT NULL
		ORDER BY create_date DESC ;
		
	</select>
	

</mapper>