<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.erunjrun.crew.dao.CrewDAO">

	<!-- 크루 정보 입력 -->
	<insert id="submitPost"
		useGeneratedKeys="true"
		keyColumn="crew_idx"
		keyProperty="crew_idx"
		parameterType="com.erunjrun.crew.dto.CrewDTO">
		
		INSERT INTO crew(crew_name, member, minute, distance, content, days, address, sido, sigungu, shortsido) 
			VALUES(#{crew_name}, #{member}, #{minute}, #{distance}, #{content}, #{days}, #{address}, #{sido}, #{sigungu}, #{shortsido})
	</insert>
	
	<insert id="fileWrite" parameterType="com.erunjrun.image.dto.ImageDTO">
		INSERT INTO image(code_name, img_ori, img_new, img_no) VALUES(#{code_name}, #{img_ori}, #{img_new}, #{img_no})
	</insert>
	
	<insert id="memberUpload" parameterType="com.erunjrun.crew.dto.CrewMemberDTO">
		INSERT INTO crew_member(crew_idx, id, is_leader) VALUES(#{crew_idx}, #{id}, #{is_leader})
	</insert>
	
	<insert id="tagUpload" parameterType="com.erunjrun.crew.dto.CrewMemberDTO">
		INSERT INTO crew_tag(crew_idx, tag_idx) VALUES(#{crew_idx}, #{tag_idx})
	</insert>
	
	<insert id="fileUpload" parameterType="com.erunjrun.image.dto.ImageDTO">
		INSERT INTO image(code_name, img_ori, img_new, img_no) VALUES(#{code_name}, #{img_ori}, #{img_new}, #{img_no})
	</insert>
	
	<!-- 크루 삭제 -->
	<update id="crewDelete" parameterType="int">
		UPDATE crew SET current_member = 0, use_yn = 'N' WHERE crew_idx = #{crew_idx}
	</update>
	
	<delete id="crewMemberDelete" parameterType="int">
		DELETE FROM crew_member WHERE crew_idx = #{crew_idx} 
	</delete>
	
	<delete id="crewTagDelete" parameterType="int">
		DELETE FROM crew_tag WHERE crew_idx = #{crew_idx}
	</delete>
	
	<delete id="crewImgDelete" parameterType="int">
		DELETE FROM image WHERE img_no = #{img_no} AND code_name IN ('I100', 'I101')
	</delete>
	
	<!-- 수정form 이동 -->
	<!-- <select id="crewUpdateView" resultType="map" parameterType="int">
	    SELECT c.*, i.img_ori, i.img_new, 
	        GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs 
	    FROM crew c
	    LEFT JOIN  image i ON c.crew_idx = i.img_no AND i.code_name in ('I101', 'I100')
	    LEFT JOIN crew_tag ct ON c.crew_idx = ct.crew_idx
	    WHERE c.crew_idx = #{crew_idx}
	    GROUP BY c.crew_idx
	</select> -->
	
	<select id="crewUpdateView" resultType="com.erunjrun.crew.dto.CrewDTO" parameterType="int">
		SELECT c.*, i.img_ori, i.img_new, 
	        GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs
	    FROM crew c
	    LEFT JOIN  image i ON c.crew_idx = i.img_no AND i.code_name in ('I101')
	    LEFT JOIN crew_tag ct ON c.crew_idx = ct.crew_idx
	    WHERE c.crew_idx = #{crew_idx}
	    GROUP BY c.crew_idx
	</select>
	
	<!-- 크루 수정 -->
	<update id="crewUpdate" parameterType="com.erunjrun.crew.dto.CrewDTO">
		UPDATE crew 
			SET crew_name = #{crew_name}, member = #{member}, minute = #{minute}, distance = #{distance}, content = #{content}, 
				days = #{days}, is_recruit = #{is_recruit}
				<if test="address != null and address != ''">
					,address = #{address}, sido = #{sido}, sigungu = #{sigungu}
				</if>
				<if test="shortsido != null and shortsido != ''">
					, shortsido = #{shortsido}
				</if> 
			WHERE crew_idx = #{crew_idx}
	</update>
	
	
	<!-- 크루 대표 이미지 업데이트 -->
	<update id="fileUpdate" parameterType="com.erunjrun.image.dto.ImageDTO">
		UPDATE image SET img_ori = #{img_ori}, img_new = #{img_new}, code_name = #{code_name} WHERE img_no = ${img_no} AND code_name = #{code_name}
	</update>
	
	<update id="fileTemUpdate" parameterType="com.erunjrun.image.dto.ImageDTO">
		UPDATE image SET img_ori = #{img_ori}, img_new = #{img_new}, code_name = #{code_name} WHERE img_no = ${img_no}
	</update>
	
	<!-- 크루 상세 페이지 -->
	<select id="crewDetail" resultType="com.erunjrun.crew.dto.CrewDTO" parameterType="int">
		SELECT *, (SELECT img_new FROM image WHERE img_no=#{crew_idx} AND code_name = 'I101') as img_new FROM crew WHERE crew_idx = #{crew_idx}
	</select>
	
	<!-- 크루 멤버 리스트 (프로필 이미지 포함) -->
	<select id="crewMemberList" resultType="com.erunjrun.crew.dto.CrewMemberDTO" parameterType="int">
		SELECT m.id, m.nickname, m.gender, COALESCE(p.image, '') as image, cm.is_leader, cm.create_date, cm.crew_idx
			FROM crew_member cm JOIN member m ON cm.id = m.id
			LEFT JOIN profile p ON m.id = p.id WHERE cm.crew_idx = #{crew_idx};
			
	</select>
	
	<!-- 크루 신청자 리스트 -->
	<select id="crewApplicationList" resultType="com.erunjrun.crew.dto.CrewMemberDTO" parameterType="map">
    SELECT m.id, m.nickname, m.gender, m.birth,  COALESCE(p.image, '') AS image, ca.create_date,
        (SELECT COUNT(*) FROM crew_application ca_inner JOIN member m_inner ON ca_inner.id = m_inner.id
         WHERE ca_inner.crew_idx = #{crew_idx}
           <if test="keyword != null and keyword != ''">
               AND m_inner.nickname LIKE CONCAT('%', #{keyword}, '%')
           </if>
        ) AS totalpage
    FROM crew_application ca
    JOIN member m ON ca.id = m.id
    LEFT JOIN profile p ON m.id = p.id
    WHERE ca.crew_idx = #{crew_idx}
    <if test="keyword != null and keyword != ''">
        AND m.nickname LIKE CONCAT('%', #{keyword}, '%')
    </if>
    ORDER BY ca.create_date DESC
    LIMIT #{offset}, #{limit}
</select>
	
	<!-- 크루 신청 -->
	<insert id="crewApplicationWrite" parameterType="map">
		INSERT INTO crew_application(id, crew_idx) VALUES(#{id}, #{crew_idx})
	</insert>
	
	<!-- 크루 신청 취소 -->
	<delete id="crewApplicationCancel" parameterType="map">
		DELETE FROM crew_application WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
	<!-- 크루 탈퇴 -->
	<delete id="crewMemberCencel" parameterType="map">
		DELETE FROM crew_member WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
	<!-- 크루 멤버 히스토리 테이블 데이터 추가 -->
	<insert id="crewHistoryWrite" parameterType="map">
		INSERT INTO crew_history(id, crew_idx, code_name) VALUES(#{id}, #{crew_idx}, #{code_name})
	</insert>
	
	<!-- 좋아요 회원인지 체크 -->
	<select id="likeIs" parameterType="map" resultType="int">
		SELECT COUNT(id) FROM crew_like WHERE crew_idx = #{crew_idx} AND id = #{id}
	</select>
	
	<insert id="likeRequest" parameterType="map">
		INSERT INTO crew_like(id, crew_idx) VALUES(#{id}, #{crew_idx})
	</insert>
	
	<delete id="likeCencel" parameterType="map">
		DELETE FROM crew_like WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
	<!-- 크루 리스트 (필터링) -->
	<select id="crewList" resultType="map" parameterType="map">
	    SELECT 
	        c.*, 
	        i.img_ori, 
	        i.img_new,  
	        GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs,
	        GROUP_CONCAT(DISTINCT t.tag_name) AS tag_names
	    FROM crew c
	    LEFT JOIN image i ON c.crew_idx = i.img_no AND i.code_name = 'I101'
	    LEFT JOIN crew_tag ct ON c.crew_idx = ct.crew_idx
	    LEFT JOIN tag t ON ct.tag_idx = t.tag_idx
	    
	    
	    <trim prefix="WHERE" prefixOverrides="AND">
		    c.use_yn = 'Y'
		    <if test="filtering != null">
		        <!-- is_recruit 조건 -->
		        <if test="filtering.contains('option1')">
		            AND c.is_recruit = 'Y'
		        </if>
		        
		        <!-- shortsido_area 조건 -->
		        <if test="filtering.contains('option13')">
		            AND c.shortsido IN ('서울', '경기', '인천')
		        </if>
		        
		        <!-- shortsido_etc 조건 -->
		        <if test="filtering.contains('option14')">
		            AND c.shortsido NOT IN ('서울', '경기', '인천')
		        </if>
		        
		        <!-- weekdays 조건 -->
		        <if test="filtering.contains('option15')">
		            AND c.days NOT REGEXP 'sat|sun'
		        </if>
		        
		        <!-- weekend 조건 -->
		        <if test="filtering.contains('option16')">
		            AND (c.days like '%sat%' OR c.days like '%sun%')
		        </if>
		        
		         <!-- 선택한 tag_idx를 포함한 모든 크루 데이터 조회 -->
		        <if test="filtering.contains('option2')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 1
		            )
		        </if>
		        
		        <if test="filtering.contains('option3')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 2
		            )
		        </if>
		        
		        <if test="filtering.contains('option4')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 3
		            )
		        </if>
		        
		        <if test="filtering.contains('option5')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 4
		            )
		        </if>
		        
		        <if test="filtering.contains('option6')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 5
		            )
		        </if>
		        
		        <if test="filtering.contains('option7')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 6
		            )
		        </if>
		        
		        <if test="filtering.contains('option8')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 7
		            )
		        </if>
		        
		        <if test="filtering.contains('option9')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 8
		            )
		        </if>
		        
		        <if test="filtering.contains('option10')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 9
		            )
		        </if>
		        
		        <if test="filtering.contains('option11')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 10
		            )
		        </if>
		        
		        <if test="filtering.contains('option12')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 11
		            )
		        </if>
		        
		    </if>
		</trim>
	    GROUP BY c.crew_idx
	    ORDER BY c.crew_idx DESC
	    LIMIT #{offset}, #{pageSize}
	</select>
	
	<!-- 크루 권한 기록 리스트 -->
	<select id="applicationAdminList" resultType="com.erunjrun.crew.dto.CrewMemberDTO" parameterType="map">
	    SELECT 
	        m.id AS member_id, m.nickname AS member_nickname, COALESCE(p.image, '') AS member_image,
	        leader.id AS leader_id, leader.nickname AS leader_nickname,
	        COALESCE(leader_profile.image, '') AS leader_image,
	        cah.create_date, cah.update_date, cah.is_agree,
	        (SELECT COUNT(*) FROM crew_application_history WHERE crew_idx = #{crew_idx} 
	            <if test="keyword != null and keyword != ''">
	                AND nickname LIKE CONCAT('%', #{keyword}, '%')
	            </if>
	        ) AS totalpage 
	    FROM crew_application_history cah
	    JOIN member m ON cah.id = m.id  
	    LEFT JOIN profile p ON m.id = p.id
	    JOIN member leader ON cah.leader = leader.id  
	    LEFT JOIN profile leader_profile ON leader.id = leader_profile.id 
	    WHERE cah.crew_idx = #{crew_idx}
	    <if test="keyword != null and keyword != ''">
	        AND m.nickname LIKE CONCAT('%', #{keyword}, '%')
	    </if>
	    GROUP BY 
	        cah.history_idx
	    ORDER BY 
	        cah.create_date DESC
	    LIMIT 
	        #{offset}, #{limit}
	</select>
	
	<insert id="crewMemberApproval" parameterType="map">
		INSERT INTO crew_member(crew_idx, id) VALUES(#{crew_idx}, #{id})				
	</insert>

	<delete id="crewMemberRefusal" parameterType="map">
		DELETE FROM crew_application WHERE crew_idx = #{crew_idx} AND id = #{id}
	</delete>
	
	<!-- 크루 생성 시 채팅방 생성 -->
	<insert id="crewChatInsert" parameterType="int">
		INSERT INTO crew_chat(crew_idx, code_cp) VALUES(#{img_no}, 'C')
	</insert>
	
	<!-- 크루장 권한 양도 요청 -->
	<insert id="crewAdminUpdate" parameterType="map">
		INSERT INTO crew_application_history(crew_idx, id, leader) VALUES(#{crew_idx}, #{id}, #{leader})
	</insert>
	
	<!-- 크루 퇴출 -->
	<delete id="crewExpel" parameterType="map">
		DELETE FROM crew_member
		    WHERE crew_idx = #{crew_idx}
		      AND id IN 
		      <foreach item="id" collection="ids" open="(" separator="," close=")">
		          #{id}
		      </foreach>
	</delete>
	
	<insert id="crewExpelHistoryWrite" parameterType="map">
		INSERT INTO crew_history(crew_idx, id, code_name)
			VALUES
			<foreach collection="ids" item="id" separator=",">
				(#{crew_idx}, #{id}, #{code_name})
			</foreach>
	</insert>
	
	
	
	<!-- 크루 공지사항 순위 중복체크 -->
	<select id="crewPriorityOverlay" resultType="map" parameterType="com.erunjrun.crew.dto.CrewNoticeDTO">
		SELECT COUNT(notice_idx) as count, notice_idx FROM crew_notice WHERE crew_idx = #{crew_idx} AND priority = 
		<if test="priority == 'pr1'">
			1
		</if>
		<if test="priority == 'pr2'">
			2
		</if>
		<if test="priority == 'pr3'">
			3
		</if>
	</select>
	
	<insert id="crewNoticeWrite" 
		useGeneratedKeys="true"
		keyColumn="notice_idx"
		keyProperty="notice_idx"
			parameterType="com.erunjrun.crew.dto.CrewNoticeDTO">
		
		INSERT INTO crew_notice(crew_idx, subject, content, id, priority) 
			VALUES(#{crew_idx}, #{subject}, #{content}, #{id}
			<choose>
	            <when test="priority != null and priority != ''">
	            ,
	                <choose>
	                    <when test="priority.contains('pr1')">
	                        1
	                    </when>
	                    <when test="priority.contains('pr2')">
	                        2
	                    </when>
	                    <when test="priority.contains('pr3')">
	                        3
	                    </when>
	                    <otherwise>
	                        0
	                    </otherwise>
	                </choose>
	            </when>
	            <otherwise>
	                0
	            </otherwise>
        </choose>
    	)
		
	</insert>
	
	
	<update id="crewNoticePriorityUpdate" parameterType="String">
	    UPDATE crew_notice
	    SET priority = 0
	    WHERE crew_idx = #{crew_idx} 
	    AND priority = 
	        <choose>
	            <when test="priority == 'pr1'">
	                1
	            </when>
	            <when test="priority == 'pr2'">
	                2
	            </when>
	            <when test="priority == 'pr3'">
	                3
	            </when>
	            <otherwise>
	                priority
	            </otherwise>
	        </choose>
	</update>
	
	<!-- 크루 공지사항 리스트 -->
	<select id="crewNoticeList" parameterType="map" resultType="com.erunjrun.crew.dto.CrewNoticeDTO">
	    SELECT cn.notice_idx, cn.crew_idx, cn.subject, cn.id, cn.hit, cn.create_date, cn.priority, m.nickname, c.crew_name,
	        (SELECT COUNT(*) FROM crew_notice WHERE crew_idx = #{crew_idx} AND use_yn = 'Y'
	           <if test="keyword != null and keyword != ''">
	               AND (
	               <choose>
	                   <when test="option == 'subject'">
	                       subject LIKE CONCAT('%', #{keyword}, '%')
	                   </when>
	                   <when test="option == 'nickname'">
	                       (SELECT nickname FROM `member` WHERE id = cn.id) LIKE CONCAT('%', #{keyword}, '%')
	                   </when>
	                   <when test="option == 'content'">
	                       content LIKE CONCAT('%', #{keyword}, '%')
	                   </when>
	               </choose>
	               )
	           </if>
	        ) AS totalpage
	    FROM crew_notice cn 
	    JOIN  `member` m ON cn.id = m.id 
	    JOIN crew c ON cn.crew_idx = c.crew_idx 
	    WHERE cn.crew_idx = #{crew_idx}  AND cn.use_yn = 'Y'
	    <if test="keyword != null and keyword != ''">
	        AND (
	        <choose>
	            <when test="option == 'subject'">
	                cn.subject LIKE CONCAT('%', #{keyword}, '%')
	            </when>
	            <when test="option == 'nickname'">
	                m.nickname LIKE CONCAT('%', #{keyword}, '%')
	            </when>
	            <when test="option == 'content'">
	                cn.content LIKE CONCAT('%', #{keyword}, '%')
	            </when>
	        </choose>
	        )
	    </if>
	    ORDER BY 
	        CASE 
	            WHEN cn.priority = 1 THEN 0
	            WHEN cn.priority = 2 THEN 1
	            WHEN cn.priority = 3 THEN 2
	            ELSE 3
	        END,
	        cn.create_date DESC
	    LIMIT #{offset}, #{limit}
	</select>
	
	<select id="crewNoticeUpdateView" parameterType="com.erunjrun.crew.dto.CrewNoticeDTO">
		SELECT * FROM crew_notice WHERE notice_idx = #{notice_idx}			
	</select>
	
	<update id="crewNoticeUpdate" parameterType="com.erunjrun.crew.dto.CrewNoticeDTO">
	    UPDATE crew_notice 
	    SET 
	        subject = #{subject}, 
	        content = #{content}, 
	        priority = 
	        <choose>
	            <when test="priority != null and priority != ''">
	                <choose>
	                    <when test="priority == 'pr1'">1</when>
	                    <when test="priority == 'pr2'">2</when>
	                    <when test="priority == 'pr3'">3</when>
	                    <otherwise>0</otherwise>
	                </choose>
	            </when>
	            <otherwise>0</otherwise>
	        </choose>
	    WHERE notice_idx = #{notice_idx}
	</update>
	
	<!-- 크루 공지 상세보기 -->
	<select id="crewNoticeDetail" resultType="com.erunjrun.crew.dto.CrewNoticeDTO" parameterType="int">
		SELECT cn.*, m.nickname, p.image 
			FROM crew_notice cn join `member` m on cn.id = m.id
			JOIN profile p on p.id = m.id 
			where notice_idx = #{notice_idx}
	</select>
	
	<!-- 공지사항 조회수 update -->
	<update id="crewNoticeHit" parameterType="int">
		UPDATE crew_notice SET hit = hit + 1 WHERE notice_idx = #{notice_idx}
	</update>
	
	<!-- 크루 공지사항 삭제 -->
	<update id="crewNoticeDelete" parameterType="int">
		UPDATE crew_notice SET use_yn = 'N', priority = 0 WHERE notice_idx = #{notice_idx}
	</update>
	
	<!-- 신청자 승인 시 크루 현재 회원 수 업데이트 -->
	<update id="crewCurrentMemberUpdate" parameterType="int">
		UPDATE crew SET current_member = current_member + 1 WHERE crew_idx = #{crew_idx}
	</update>
	
	<!-- 로그인한 유저 닉네임 추출 -->
	<select id="nickName" resultType="com.erunjrun.member.dto.MemberDTO">
    	select nickname from member where id = #{param1}
    </select>
    
    <!-- 크루장 정보 가져오기 -->
	<select id="crewLeaderCheck" resultType="String" parameterType="int">
		SELECT id FROM crew_member WHERE crew_idx = #{crew_idx} AND is_leader = 'Y'
	</select>
	
	<!-- 관심 크루 목록 -->
	<select id="crewLikeCrew" resultType="com.erunjrun.crew.dto.CrewMemberDTO" parameterType="String">
		select crew_idx from crew_like where id = #{id} ORDER BY crew_idx DESC
	</select>
	
</mapper>