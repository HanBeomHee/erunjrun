<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.erunjrun.crew.dao.CrewDAO">

	<!-- 크루 정보 입력 -->
	<insert id="submitPost"
		useGeneratedKeys="true"
		keyColumn="crew_idx"
		keyProperty="crew_idx"
		parameterType="com.erunjrun.crew.dto.CrewDTO">
		
		INSERT INTO crew(crew_name, member, minute, distance, content, days, address, sido, sigungu, shortsido) 
			VALUES(#{crew_name}, #{member}, #{minute}, #{distance}, #{content}, #{days}, #{address}, #{sido}, #{sigungu}, #{shortsido})
	</insert>
	
	<insert id="fileWrite" parameterType="com.erunjrun.image.dto.ImageDTO">
		INSERT INTO image(code_name, img_ori, img_new, img_no) VALUES(#{code_name}, #{img_ori}, #{img_new}, #{img_no})
	</insert>
	
	<insert id="memberUpload" parameterType="com.erunjrun.crew.dto.CrewMemberDTO">
		INSERT INTO crew_member(crew_idx, id, is_leader) VALUES(#{crew_idx}, #{id}, #{is_leader})
	</insert>
	
	<insert id="tagUpload" parameterType="com.erunjrun.crew.dto.CrewMemberDTO">
		INSERT INTO crew_tag VALUES(#{crew_idx}, #{tag_idx})
	</insert>
	
	<insert id="fileUpload" parameterType="com.erunjrun.image.dto.ImageDTO">
		INSERT INTO image(code_name, img_ori, img_new, img_no) VALUES(#{code_name}, #{img_ori}, #{img_new}, #{img_no})
	</insert>
	
	<!-- 크루 삭제 -->
	<update id="crewDelete" parameterType="int">
		UPDATE crew SET current_member = 0, use_yn = 'N' WHERE crew_idx = #{crew_idx}
	</update>
	
	<delete id="crewMemberDelete" parameterType="int">
		DELETE FROM crew_member WHERE crew_idx = #{crew_idx} 
	</delete>
	
	<delete id="crewTagDelete" parameterType="int">
		DELETE FROM crew_tag WHERE crew_idx = #{crew_idx}
	</delete>
	
	<delete id="crewImgDelete" parameterType="int">
		DELETE FROM image WHERE img_no = #{img_no} AND code_name IN ('I100', 'I101')
	</delete>
	
	<!-- 수정form 이동 -->
	<select id="crewUpdateView" resultType="map" parameterType="int">
	    SELECT 
	        c.*, 
	        i.img_ori, 
	        i.img_new, 
	        GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs 
	    FROM 
	        crew c
	    LEFT JOIN 
	        image i ON c.crew_idx = i.img_no AND i.code_name in ('I101', 'I100')
	    LEFT JOIN 
	        crew_tag ct ON c.crew_idx = ct.crew_idx
	    WHERE 
	        c.crew_idx = #{crew_idx}
	    GROUP BY 
	        c.crew_idx;
	</select>
	
	<!-- 크루 수정 -->
	<update id="crewUpdate" parameterType="com.erunjrun.crew.dto.CrewDTO">
		UPDATE crew 
			SET crew_name = #{crew_name}, member = #{member}, minute = #{minute}, distance = #{distance}, content = #{content}, 
				days = #{days}, address = #{address}, sido = #{sido}, sigungu = #{sigungu}, shortsido = #{shortsido}, is_recruit = #{is_recruit} 
			WHERE crew_idx = #{crew_idx}
	</update>
	
	
	<!-- 크루 대표 이미지 업데이트 -->
	<update id="fileUpdate" parameterType="com.erunjrun.image.dto.ImageDTO">
		UPDATE image SET img_ori = #{img_ori}, img_new = #{img_new}, code_name = #{code_name} WHERE img_no = ${img_no}
	</update>
	
	<update id="fileTemUpdate" parameterType="com.erunjrun.image.dto.ImageDTO">
		UPDATE image SET img_ori = #{img_ori}, img_new = #{img_new}, code_name = #{code_name} WHERE img_no = ${img_no}
	</update>
	
	<!-- 크루 상세 페이지 -->
	<select id="crewDetail" resultType="com.erunjrun.crew.dto.CrewDTO" parameterType="int">
		SELECT *, (SELECT img_new FROM image WHERE img_no=#{crew_idx} AND code_name = 'I101') as img_new FROM crew WHERE crew_idx = #{crew_idx}
	</select>
	
	<!-- 크루 멤버 리스트 (프로필 이미지 포함) -->
	<select id="crewMemberList" resultType="com.erunjrun.crew.dto.CrewMemberDTO" parameterType="int">
		SELECT m.id, m.nickname, m.gender, COALESCE(p.image, '') as image, cm.is_leader
			FROM crew_member cm JOIN member m ON cm.id = m.id
			LEFT JOIN profile p ON m.id = p.id WHERE cm.crew_idx = #{crew_idx};
			
	</select>
	
	<!-- 크루 신청자 리스트 -->
	<select id="crewApplicationList" resultType="com.erunjrun.crew.dto.CrewMemberDTO" parameterType="int">
		SELECT m.id, m.nickname, m.gender, m.birth, COALESCE(p.image, '') as image, ca.create_date,
	       (SELECT COUNT(*) FROM crew_application WHERE crew_idx = 52) AS totalPage
			FROM crew_application ca
			JOIN member m ON ca.id = m.id
			LEFT JOIN profile p ON m.id = p.id
			WHERE ca.crew_idx = #{crew_idx}
			GROUP BY m.id, m.nickname, m.gender, m.birth, p.image
			<if test="offset > 0">
				LIMIT #{limit} OFFSET #{offset}
			</if>
	</select>
	
	<!-- 크루 신청 -->
	<insert id="crewApplicationWrite" parameterType="map">
		INSERT INTO crew_application(id, crew_idx) VALUES(#{id}, #{crew_idx})
	</insert>
	
	<!-- 크루 신청 취소 -->
	<delete id="crewApplicationCancel" parameterType="map">
		DELETE FROM crew_application WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
	<!-- 크루 탈퇴 -->
	<delete id="crewMemberCencel" parameterType="map">
		DELETE FROM crew_member WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
	<!-- 크루 멤버 히스토리 테이블 데이터 추가 -->
	<insert id="crewHistoryWrite" parameterType="map">
		INSERT INTO crew_history(id, crew_idx, code_name) VALUES(#{id}, #{crew_idx}, #{code_name})
	</insert>
	
	<!-- 좋아요 회원인지 체크 -->
	<select id="likeIs" parameterType="map" resultType="int">
		SELECT COUNT(id) FROM crew_like WHERE crew_idx = #{crew_idx} AND id = #{id}
	</select>
	
	<insert id="likeRequest" parameterType="map">
		INSERT INTO crew_like(id, crew_idx) VALUES(#{id}, #{crew_idx})
	</insert>
	
	<delete id="likeCencel" parameterType="map">
		DELETE FROM crew_like WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
<!-- 	<select id="crewList" resultType="map" parameterType="String">
		SELECT 
		    c.*, 
		    i.img_ori, 
		    i.img_new,  
		    GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs,
		    GROUP_CONCAT(DISTINCT t.tag_name) AS tag_names
		FROM crew c
		LEFT JOIN image i ON c.crew_idx = i.img_no AND i.code_name = 'I101'
		LEFT JOIN crew_tag ct ON c.crew_idx = ct.crew_idx
		LEFT JOIN tag t ON ct.tag_idx = t.tag_idx
		
		WHERE 1 = 1
	        <if test="filtering != null and filtering.contains('is_recruit')">
	            AND c.is_recruit = 'Y'
	        </if>
	        
	        <if test="filtering != null and filtering.contains('shortsido_area')">
	            AND c.shortsido IN ('서울', '경기', '인천')
	        </if>
	        
	        <if test="filtering != null and filtering.contains('shortsido_etc')">
	            AND c.shortsido NOT IN ('서울', '경기', '인천')
	        </if>
	        
	        <if test="filtering != null and filtering.contains('weekdays')">
	            AND (c.days NOT REGEXP 'sat|sun')
	        </if>
	        
	        <if test="filtering != null and filtering.contains('weekend')">
	            AND (c.days REGEXP 'sat|sun')
	        </if>
		
		GROUP BY c.crew_idx

	    HAVING 조건
	    <if test="filtering != null and filtering.size() > 0">
	        HAVING 
	        <foreach collection="filtering" item="filter" separator="OR">
	            tag_idxs LIKE CONCAT('%', #{filter}, '%')
	        </foreach>
	    </if>
		
		ORDER BY c.crew_idx DESC
	</select> -->
	
	<select id="crewList" resultType="map" parameterType="map">
	    SELECT 
	        c.*, 
	        i.img_ori, 
	        i.img_new,  
	        GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs,
	        GROUP_CONCAT(DISTINCT t.tag_name) AS tag_names
	    FROM crew c
	    LEFT JOIN image i ON c.crew_idx = i.img_no AND i.code_name = 'I101'
	    LEFT JOIN crew_tag ct ON c.crew_idx = ct.crew_idx
	    LEFT JOIN tag t ON ct.tag_idx = t.tag_idx
	    
	    <trim prefix="WHERE" prefixOverrides="AND">
		    <if test="filtering != null">
		        <!-- is_recruit 조건 -->
		        <if test="filtering.contains('option1')">
		            AND c.is_recruit = 'Y'
		        </if>
		        
		        <!-- shortsido_area 조건 -->
		        <if test="filtering.contains('option13')">
		            AND c.shortsido IN ('서울', '경기', '인천')
		        </if>
		        
		        <!-- shortsido_etc 조건 -->
		        <if test="filtering.contains('option14')">
		            AND c.shortsido NOT IN ('서울', '경기', '인천')
		        </if>
		        
		        <!-- weekdays 조건 -->
		        <if test="filtering.contains('option15')">
		            AND c.days NOT REGEXP 'sat|sun'
		        </if>
		        
		        <!-- weekend 조건 -->
		        <if test="filtering.contains('option16')">
		            AND (c.days like '%sat%' OR c.days like '%sun%')
		        </if>
		        
		         <!-- 선택한 tag_idx를 포함한 모든 크루 데이터 조회 -->
		        <if test="filtering.contains('option2')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 1
		            )
		        </if>
		        
		        <if test="filtering.contains('option3')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 2
		            )
		        </if>
		        
		        <if test="filtering.contains('option4')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 3
		            )
		        </if>
		        
		        <if test="filtering.contains('option5')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 4
		            )
		        </if>
		        
		        <if test="filtering.contains('option6')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 5
		            )
		        </if>
		        
		        <if test="filtering.contains('option7')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 6
		            )
		        </if>
		        
		        <if test="filtering.contains('option8')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 7
		            )
		        </if>
		        
		        <if test="filtering.contains('option9')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 8
		            )
		        </if>
		        
		        <if test="filtering.contains('option10')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 9
		            )
		        </if>
		        
		        <if test="filtering.contains('option11')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 10
		            )
		        </if>
		        
		        <if test="filtering.contains('option12')">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx = 11
		            )
		        </if>
		        
		        <!-- 선택한 tag_idx를 포함한 모든 크루 데이터 조회 -->
<!-- 		        <if test="filtering.size > 0">
		            AND c.crew_idx IN (
		                SELECT crew_idx
		                FROM crew_tag
		                WHERE tag_idx IN
		                <foreach collection="filtering" item="filter" open="(" separator="," close=")">
		                    <choose>
		                        <when test="filter == 'option2'">1</when>
		                        <when test="filter == 'option3'">2</when>
		                        <when test="filter == 'option4'">3</when>
		                        <when test="filter == 'option5'">4</when>
		                        <when test="filter == 'option6'">5</when>
		                        <when test="filter == 'option7'">6</when>
		                        <when test="filter == 'option8'">7</when>
		                        <when test="filter == 'option9'">8</when>
		                        <when test="filter == 'option10'">9</when>
		                        <when test="filter == 'option11'">10</when>
		                        <when test="filter == 'option12'">11</when>
		                    </choose>
		                </foreach>
		            )
		        </if> -->
		        
		       <!--  <if test="filtering.matches('option[2-9]|option1[0-2]')">
		            AND ct.tag_idx LIKE CONCAT('%', SUBSTRING(#{filter}, 7), '%')
		        </if> -->
		    </if>
	        <!-- <choose>
		        <when test="filtering != null and filtering.contains('shortsido_area')">
		            c.shortsido IN ('서울', '경기', '인천')
		        </when>
		        <when test="filtering != null and filtering.contains('shortsido_etc')">
		        	c.shortsido NOT IN ('서울', '경기', '인천')
		        </when>
		        <when test="filtering != null and filtering.contains('weekdays')">
		        	c.days NOT REGEXP 'sat|sun'
		        </when>
		        <when test="filtering != null and filtering.contains('weekend')">
		        	c.days REGEXP 'sat|sun'
		        </when>
		        <when test="filtering != null and filtering.contains('is_recruit')">
		        	c.is_recruit = 'Y'
		        </when>
		        <when test="filtering != null">
		        	<foreach collection="filtering" item="filter" separator="AND">
		                ct.tag_idx LIKE CONCAT('%', #{filter}, '%')
			        </foreach>
		        </when>
		    </choose> -->
		</trim>
	    GROUP BY c.crew_idx
	    ORDER BY c.crew_idx DESC
	    LIMIT #{offset}, #{pageSize}
	</select>

</mapper>