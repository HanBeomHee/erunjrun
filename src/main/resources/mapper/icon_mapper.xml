<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.erunjrun.icon.dao.IconDAO">

	
	<select id="getIconList" resultType="com.erunjrun.icon.dto.IconDTO">
		SELECT 
			i.icon_idx, image, icon_name, cost,
			CASE
				WHEN ib.icon_idx IS NOT NULL THEN 'Y'
				ELSE 'N'
			END AS bought
		FROM icon i
		LEFT JOIN
			icon_buy ib
		ON
			i.icon_idx = ib.icon_idx 
			AND ib.id = #{userId}
		WHERE 
			use_yn = 'Y'
	</select>

	<select id="getUserInfo" resultType="com.erunjrun.icon.dto.IconDTO">
		SELECT image, point, count(icon_idx) AS icon_quantity FROM member m 
			LEFT JOIN icon_buy i ON m.id = i.id 
			JOIN profile p ON m.id = p.id 
			WHERE m.id = #{userId}
	</select>
	
	<insert id="buyIcon">
		INSERT INTO icon_buy (icon_idx,id) VALUES (#{iconIdx},#{userId})
	</insert>

	<insert id="deductPoint">
		INSERT INTO member_point (code_name,id,point) 
			VALUES ('P104', #{userId}, -(SELECT cost FROM icon WHERE icon_idx = #{iconIdx}))
	</insert>
	
	<update id="updateMemberTable">
		UPDATE member SET point = (
			SELECT SUM(point) FROM member_point 
			WHERE id = #{userId}
		) 
			WHERE id = #{userId}
	</update>
	
	<select id="checkPoint">
		SELECT point FROM member WHERE id = #{userId}
	</select>
	
	<select id="adminIconList" resultType="com.erunjrun.icon.dto.IconDTO">
		SELECT icon_idx, icon_name, image, cost, use_yn,
			COUNT(*) OVER() AS total_count
			FROM icon
			ORDER BY icon_idx LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<insert id="adminIconWrite" parameterType="map">
		INSERT INTO icon (icon_name,cost,image,use_yn) 
			VALUES (#{icon_name},#{cost},#{path},#{use_yn})
	</insert>
	
	<select id="adminIconData" resultType="com.erunjrun.icon.dto.IconDTO">
		SELECT icon_idx, icon_name, cost, image, use_yn 
			FROM icon WHERE icon_idx = #{icon_idx}
	</select>
	
	<insert id="adminIconUpdate" parameterType="map">
		UPDATE icon 
		SET 
			icon_name = #{icon_name}, 
			cost = #{cost}, 
			image = #{path}, 
			use_yn = #{use_yn} 
		WHERE
			icon_idx = #{icon_idx}
	</insert>
	
	  <select id="iconbuylist" resultType="com.erunjrun.icon.dto.IconDTO"> <!-- 아이콘 패키지 따로 뺄거인가?? 인터페이스 설계서에는 그렇게 나와있는데 -->
      SELECT m.birth,m.gender,m.id,ib.buy_date
       FROM icon_buy ib
       JOIN member m ON ib.id = m.id
       where ib.icon_idx = #{icon_idx}
       ORDER BY icon_idx DESC LIMIT #{limit} OFFSET #{offset}
   </select>
   
   <select id="iconbuycount" resultType="int">
      SELECT CEIL(count(buy_idx)/#{param1}) AS pages FROM icon_buy
   </select>
   
   <select id="iconchart" resultType="com.erunjrun.icon.dto.IconDTO">
	    SELECT 
	    i.icon_name,
	    i.icon_idx,
	    i.image,
	    SUM(CASE WHEN m.gender = '남' THEN 1 ELSE 0 END) AS male_count, 
	    SUM(CASE WHEN m.gender = '여' THEN 1 ELSE 0 END) AS female_count, 
	    ROUND(SUM(CASE WHEN m.gender IN ('남', '여') THEN 1 ELSE 0 END) * 100.0 / 
	          (SELECT COUNT(*) FROM icon_buy WHERE icon_idx = i.icon_idx), 2) AS sales_percentage, 
	    SUM(CASE WHEN m.gender IN ('남', '여') THEN 1 ELSE 0 END) AS total_sales 
	   FROM 
	       icon i
	   JOIN 
	       icon_buy ib ON i.icon_idx = ib.icon_idx
	   JOIN 
	       member m ON ib.id = m.id
	   WHERE 
	       YEAR(CURDATE()) - YEAR(m.birth) BETWEEN #{startAge} AND #{endAge} 
	   GROUP BY 
	       i.icon_name, i.image
	   ORDER BY 
	      total_sales  DESC
	   LIMIT #{limit} OFFSET #{offset};

   </select>
   
   <select id="iconchartcount" resultType="int">
      SELECT CEIL(count(icon_idx)/#{param1}) AS pages FROM icon_buy
   </select>
   
   
   
   <select id="getMonthlySalesData" resultType="com.erunjrun.icon.dto.IconDTO">
       SELECT 
        MONTH(ib.buy_date) AS timePeriod, 
        COUNT(*) AS purchaseCount, 
        i.icon_name
       FROM icon_buy ib
       LEFT JOIN icon i ON i.icon_idx = ib.icon_idx
       WHERE YEAR(ib.buy_date) = #{year}
       GROUP BY i.icon_name, MONTH(ib.buy_date)
       ORDER BY MONTH(ib.buy_date)
    </select>

    <select id="getWeeklySalesData" resultType="com.erunjrun.icon.dto.IconDTO">
         SELECT 
        WEEK(ib.buy_date, 1) - WEEK(DATE_SUB(ib.buy_date, INTERVAL DAYOFMONTH(ib.buy_date) - 1 DAY), 1) + 1 AS timePeriod,
        COUNT(*) AS purchaseCount,
        i.icon_name
    FROM icon_buy ib
    LEFT JOIN icon i ON i.icon_idx = ib.icon_idx
    WHERE YEAR(ib.buy_date) = #{year} AND MONTH(ib.buy_date) = #{month}
    GROUP BY i.icon_name, timePeriod
    ORDER BY timePeriod
   </select>


    <select id="getDailySalesData" resultType="com.erunjrun.icon.dto.IconDTO">
        SELECT DAY(ib.buy_date) AS timePeriod, COUNT(*) AS purchaseCount, i.icon_name
        FROM icon_buy ib
        LEFT JOIN icon i ON i.icon_idx = ib.icon_idx
        WHERE YEAR(ib.buy_date) = #{year} AND MONTH(ib.buy_date) = #{month}
        GROUP BY i.icon_name, DAY(ib.buy_date)
    </select>

    <select id="getAvailableYears" resultType="int">
        SELECT DISTINCT YEAR(ib.buy_date) AS year
        FROM icon_buy ib
        ORDER BY year
    </select>
	 
	
	
	
	
	
	
	
	
	
	
</mapper> 