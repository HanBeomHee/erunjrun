<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.erunjrun.crew.dao.CrewDAO">

	<!-- 크루 정보 입력 -->
	<insert id="submitPost"
		useGeneratedKeys="true"
		keyColumn="crew_idx"
		keyProperty="crew_idx"
		parameterType="com.erunjrun.crew.dto.CrewDTO">
		
		INSERT INTO crew(crew_name, member, minute, distance, content, days, address, sido, sigungu, shortsido) 
			VALUES(#{crew_name}, #{member}, #{minute}, #{distance}, #{content}, #{days}, #{address}, #{sido}, #{sigungu}, #{shortsido})
	</insert>
	
	<insert id="fileWrite" parameterType="com.erunjrun.image.dto.ImageDTO">
		INSERT INTO image(code_name, img_ori, img_new, img_no) VALUES(#{code_name}, #{img_ori}, #{img_new}, #{img_no})
	</insert>
	
	<insert id="memberUpload" parameterType="com.erunjrun.crew.dto.CrewMemberDTO">
		INSERT INTO crew_member(crew_idx, id, is_leader) VALUES(#{crew_idx}, #{id}, #{is_leader})
	</insert>
	
	<insert id="tagUpload" parameterType="com.erunjrun.crew.dto.CrewMemberDTO">
		INSERT INTO crew_tag VALUES(#{crew_idx}, #{tag_idx})
	</insert>
	
	<insert id="fileUpload" parameterType="com.erunjrun.image.dto.ImageDTO">
		INSERT INTO image(code_name, img_ori, img_new, img_no) VALUES(#{code_name}, #{img_ori}, #{img_new}, #{img_no})
	</insert>
	
	<!-- 크루 삭제 -->
	<update id="crewDelete" parameterType="int">
		UPDATE crew SET current_member = 0, use_yn = 'N' WHERE crew_idx = #{crew_idx}
	</update>
	
	<delete id="crewMemberDelete" parameterType="int">
		DELETE FROM crew_member WHERE crew_idx = #{crew_idx} 
	</delete>
	
	<delete id="crewTagDelete" parameterType="int">
		DELETE FROM crew_tag WHERE crew_idx = #{crew_idx}
	</delete>
	
	<delete id="crewImgDelete" parameterType="int">
		DELETE FROM image WHERE img_no = #{img_no} AND code_name IN ('I100', 'I101')
	</delete>
	
	<!-- 수정form 이동 -->
	<select id="crewUpdateView" resultType="map" parameterType="int">
	    SELECT 
	        c.*, 
	        i.img_ori, 
	        i.img_new, 
	        GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs 
	    FROM 
	        crew c
	    LEFT JOIN 
	        image i ON c.crew_idx = i.img_no AND i.code_name in ('I101', 'I100')
	    LEFT JOIN 
	        crew_tag ct ON c.crew_idx = ct.crew_idx
	    WHERE 
	        c.crew_idx = #{crew_idx}
	    GROUP BY 
	        c.crew_idx;
	</select>
	
	<!-- 크루 수정 -->
	<update id="crewUpdate" parameterType="com.erunjrun.crew.dto.CrewDTO">
		UPDATE crew 
			SET crew_name = #{crew_name}, member = #{member}, minute = #{minute}, distance = #{distance}, content = #{content}, 
				days = #{days}, address = #{address}, sido = #{sido}, sigungu = #{sigungu}, shortsido = #{shortsido}, is_recruit = #{is_recruit} 
			WHERE crew_idx = #{crew_idx}
	</update>
	
	
	<!-- 크루 대표 이미지 업데이트 -->
	<update id="fileUpdate" parameterType="com.erunjrun.image.dto.ImageDTO">
		UPDATE image SET img_ori = #{img_ori}, img_new = #{img_new}, code_name = #{code_name} WHERE img_no = ${img_no}
	</update>
	
	<update id="fileTemUpdate" parameterType="com.erunjrun.image.dto.ImageDTO">
		UPDATE image SET img_ori = #{img_ori}, img_new = #{img_new}, code_name = #{code_name} WHERE img_no = ${img_no}
	</update>
	
	<!-- 크루 상세 페이지 -->
	<select id="crewDetail" resultType="com.erunjrun.crew.dto.CrewDTO" parameterType="int">
		SELECT *, (SELECT img_new FROM image WHERE img_no=#{crew_idx} AND code_name = 'I101') as img_new FROM crew WHERE crew_idx = #{crew_idx}
	</select>
	
	<!-- 크루 멤버 리스트 (프로필 이미지 포함) -->
	<select id="crewMemberList" resultType="com.erunjrun.crew.dto.CrewMemberDTO" parameterType="int">
		SELECT m.id, m.nickname, m.gender, COALESCE(p.image, '') as image, cm.is_leader
			FROM crew_member cm JOIN member m ON cm.id = m.id
			LEFT JOIN profile p ON m.id = p.id WHERE cm.crew_idx = #{crew_idx};
	</select>
	
	<select id="crewApplicationList" resultType="com.erunjrun.crew.dto.CrewMemberDTO" parameterType="int">
		SELECT id, application_idx FROM crew_application WHERE crew_idx = #{crew_idx}
	</select>
	
	<!-- 크루 신청 -->
	<insert id="crewApplicationWrite" parameterType="map">
		INSERT INTO crew_application(id, crew_idx) VALUES(#{id}, #{crew_idx})
	</insert>
	
	<!-- 크루 신청 취소 -->
	<delete id="crewApplicationCancel" parameterType="map">
		DELETE FROM crew_application WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
	<!-- 크루 탈퇴 -->
	<delete id="crewMemberCencel" parameterType="map">
		DELETE FROM crew_member WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
	<!-- 크루 멤버 히스토리 테이블 데이터 추가 -->
	<insert id="crewHistoryWrite" parameterType="map">
		INSERT INTO crew_history(id, crew_idx, code_name) VALUES(#{id}, #{crew_idx}, #{code_name})
	</insert>
	
	<!-- 좋아요 회원인지 체크 -->
	<select id="likeIs" parameterType="map" resultType="int">
		SELECT COUNT(id) FROM crew_like WHERE crew_idx = #{crew_idx} AND id = #{id}
	</select>
	
	<insert id="likeRequest" parameterType="map">
		INSERT INTO crew_like(id, crew_idx) VALUES(#{id}, #{crew_idx})
	</insert>
	
	<delete id="likeCencel" parameterType="map">
		DELETE FROM crew_like WHERE id = #{id} AND crew_idx = #{crew_idx}
	</delete>
	
<!-- 	<select id="crewList" resultType="map" parameterType="String">
		SELECT 
		    c.*, 
		    i.img_ori, 
		    i.img_new,  
		    GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs,
		    GROUP_CONCAT(DISTINCT t.tag_name) AS tag_names
		FROM crew c
		LEFT JOIN image i ON c.crew_idx = i.img_no AND i.code_name = 'I101'
		LEFT JOIN crew_tag ct ON c.crew_idx = ct.crew_idx
		LEFT JOIN tag t ON ct.tag_idx = t.tag_idx
		
		WHERE 1 = 1
	        <if test="filtering != null and filtering.contains('is_recruit')">
	            AND c.is_recruit = 'Y'
	        </if>
	        
	        <if test="filtering != null and filtering.contains('shortsido_area')">
	            AND c.shortsido IN ('서울', '경기', '인천')
	        </if>
	        
	        <if test="filtering != null and filtering.contains('shortsido_etc')">
	            AND c.shortsido NOT IN ('서울', '경기', '인천')
	        </if>
	        
	        <if test="filtering != null and filtering.contains('weekdays')">
	            AND (c.days NOT REGEXP 'sat|sun')
	        </if>
	        
	        <if test="filtering != null and filtering.contains('weekend')">
	            AND (c.days REGEXP 'sat|sun')
	        </if>
		
		GROUP BY c.crew_idx

	    HAVING 조건
	    <if test="filtering != null and filtering.size() > 0">
	        HAVING 
	        <foreach collection="filtering" item="filter" separator="OR">
	            tag_idxs LIKE CONCAT('%', #{filter}, '%')
	        </foreach>
	    </if>
		
		ORDER BY c.crew_idx DESC
	</select> -->
	
	<select id="crewList" resultType="map" parameterType="map">
	    SELECT 
	        c.*, 
	        i.img_ori, 
	        i.img_new,  
	        GROUP_CONCAT(DISTINCT ct.tag_idx) AS tag_idxs,
	        GROUP_CONCAT(DISTINCT t.tag_name) AS tag_names
	    FROM crew c
	    LEFT JOIN image i ON c.crew_idx = i.img_no AND i.code_name = 'I101'
	    LEFT JOIN crew_tag ct ON c.crew_idx = ct.crew_idx
	    LEFT JOIN tag t ON ct.tag_idx = t.tag_idx
	    
	    <where>
	        <if test="filtering != null and filtering.contains('is_recruit')">
	            AND c.is_recruit = 'Y'
	        </if>
	        <if test="filtering != null and filtering.contains('shortsido_area')">
	            AND c.shortsido IN ('서울', '경기', '인천')
	        </if>
	        <if test="filtering != null and filtering.contains('shortsido_etc')">
	            AND c.shortsido NOT IN ('서울', '경기', '인천')
	        </if>
	        <if test="filtering != null and filtering.contains('weekdays')">
	            AND c.days NOT REGEXP 'sat|sun'
	        </if>
	        <if test="filtering != null and filtering.contains('weekend')">
	            AND c.days REGEXP 'sat|sun'
	        </if>
	        <if test="filtering != null and !filtering.isEmpty()">
			    AND (
			        <foreach collection="filtering" item="filter" separator=" OR ">
			            <if test="filter == '1' or filter == '2' or filter == '3' or filter == '4' or filter == '5' or 
			                     filter == '6' or filter == '7' or filter == '8' or filter == '9' or filter == '10' or filter == '11'">
			                ct.tag_idx LIKE CONCAT('%', #{filter}, '%')
			            </if>
			        </foreach>
			    )
			</if>
	    </where>
	    
	    GROUP BY c.crew_idx
	

	
	    ORDER BY c.crew_idx DESC
	
	    LIMIT #{offset}, #{pageSize}
	</select>

</mapper>